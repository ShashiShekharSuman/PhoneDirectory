package phonedirectory;

import java.sql.SQLException;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.EmptyBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    LinkedList contactList = new LinkedList();
    SqlQueryRunner sql = new SqlQueryRunner();
    TrieHash trie = new TrieHash();

    public Main() {
        initComponents();
        sql.openConnection();
        String query = "SELECT * FROM directory";
        var rs = sql.executeQuery(query);
        try {
            while (rs.next()) {
                contactList.addLast(new Contact(
                        rs.getString("name"),
                        Long.parseLong(rs.getString("number")),
                        rs.getString("email")).getName());
                trie.addName(rs.getString("name"));
                trie.addNumber(Long.parseLong(rs.getString("number")));
            }
        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
        loadContactsToList(contactList);
        addSearchEventListener();
        updateStatus(contactList);
    }

    public Main(LinkedList contactList, TrieHash trie) {
        initComponents();
        this.contactList = contactList;
        this.trie = trie;
        if (sortByComboBox.getSelectedIndex() == 0) {
            contactList.sortAsc();
        } else if (sortByComboBox.getSelectedIndex() == 1) {
            contactList.sortDesc();
        }
        loadContactsToList(contactList);
        addSearchEventListener();
        updateStatus(contactList);
    }

    private void updateStatus(LinkedList contactList) {
        var size = contactList.size();
        if (size <= 0) {
            statusTextField.setText("No Contacts");
        } else {
            statusTextField.setText(size + " Contacts");
        }
    }

    private void addSearchEventListener() {
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {

            private void searchContact() {
                var str = jTextField1.getText();
                if (!"".equals(str)) {
                    if (trie.search(str)) {
                        if (sortByComboBox.getSelectedIndex() == 0 && TrieHash.results.size() != 0) {
                            TrieHash.results.sortAsc();
                        } else if (sortByComboBox.getSelectedIndex() == 1 && TrieHash.results.size() != 0){
                            TrieHash.results.sortDesc();
                        }
                        loadContactsToList(TrieHash.results);
                        updateStatus(TrieHash.results);
                    } else {
                        contactDisplayList.setModel(new DefaultListModel());
                        statusTextField.setText("No Contacts");
                    }
                } else {
                    if (sortByComboBox.getSelectedIndex() == 0) {
                        contactList.sortAsc();
                    } else if (sortByComboBox.getSelectedIndex() == 1) {
                        contactList.sortDesc();
                    }
                    loadContactsToList(contactList);
                    updateStatus(contactList);
                }
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                searchContact();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                searchContact();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                searchContact();
            }

        });
    }

    private void loadContactsToList(LinkedList contactList) {
        DefaultListModel l = new DefaultListModel();
        phonedirectory.Node temp = contactList.first;
        while (temp != null) {
            l.addElement(temp.name);
            temp = temp.next;
        }
        contactDisplayList.setModel(l);
        DefaultListCellRenderer renderer = (DefaultListCellRenderer) contactDisplayList.getCellRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);
        contactDisplayList.setFixedCellHeight(20);
        contactDisplayList.setBorder(new EmptyBorder(1, 1, 1, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addContactButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        contactDisplayList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sortByComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        statusTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addContactButton.setText("Add Contact");
        addContactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactButtonActionPerformed(evt);
            }
        });

        contactDisplayList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        contactDisplayList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        contactDisplayList.setVisibleRowCount(20);
        contactDisplayList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactDisplayListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(contactDisplayList);

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html><center>Phone Directory</html>");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<HTML> <b> Contacts </b> </html>");

        jLabel3.setText("üîç");

        sortByComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name ‚Üì", "Name ‚Üë" }));
        sortByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Sort By:");

        statusTextField.setEditable(false);
        statusTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addContactButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(statusTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sortByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addContactButton)
                    .addComponent(exitButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addContactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactButtonActionPerformed
        new AddContact(contactList, trie).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addContactButtonActionPerformed

    private void contactDisplayListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactDisplayListMouseClicked
        new ViewContact(contactList, trie, Contact.get(contactDisplayList.getSelectedValue().toLowerCase())).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_contactDisplayListMouseClicked

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void sortByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByComboBoxActionPerformed
        if (sortByComboBox.getSelectedIndex() == 0) {
            if (!"".equals(jTextField1.getText())) {
                TrieHash.results.sortAsc();
                loadContactsToList(TrieHash.results);
            } else {
                contactList.sortAsc();
                loadContactsToList(contactList);
            }
        } else if (sortByComboBox.getSelectedIndex() == 1) {
            if (!"".equals(jTextField1.getText())) {
                TrieHash.results.sortDesc();
                loadContactsToList(TrieHash.results);
            } else {
                contactList.sortDesc();
                loadContactsToList(contactList);
            }
        }
    }//GEN-LAST:event_sortByComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContactButton;
    private javax.swing.JList<String> contactDisplayList;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> sortByComboBox;
    private javax.swing.JTextField statusTextField;
    // End of variables declaration//GEN-END:variables
}
